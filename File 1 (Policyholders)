def policy_menu_display(): #The function to create a menu for the policyholders
        print ("\nYou have chosen to view the policyholder menu\n")
        print("===== Policy Holder Menu =====")
        print("1. View Policy holders details")
        print("2. Add a new policy holder")
        print("3. Exit")
        print("================")

def policy_choice(): #Simple function to process the user choice for what to do
    choice = int(input_integer("Enter your option "))
    if 1 <= choice <= 3:
        return choice
    else:
        print ("Invalid choice")
        return choice()

def policy_menu(): #Combining the choice correlation to the following function to be called
    while True:   
        policy_menu_display()
        userchoice = policy_choice()
        if userchoice == 1:
            view_policy_details()
        elif userchoice == 2:
            add_new_policy()
        elif userchoice == 3:
            break
        else:
            print("Invalid choice, enter a number between 1 and 3 please")


def read_policy_holder(): #Important function to begin reading the policy holder excel file, saved as a csv file, into a python list for manipulation
        policy_holder = []
        try:
                with open('policyholders.csv', 'r', encoding = 'utf-8') as file: #standard code for reading a file
                          for line in file:
                                  policy_holder.append(line.strip().split(','))
        except FileNotFoundError:
                pass
        return policy_holder

def save_policy_holder(policy_holder): #Function called if the user decides to save the newly added policy holder to the excel file
        with open ('policyholders.csv', 'w', encoding = 'utf-8') as file: 
                for holder in policy_holder:
                        file.write(','.join(holder) + '\n')
                
        


def view_policy_details(): #Function called if 1 is chosen in the policyholder menu
    policy_number = input("Input your policy number specific to the policy holder you are looking for ")
    policy_holder = read_policy_holder() #Prepares the list to represent the file
    #print(policy_holder)
    exists = False #Only turns true if policy number exists in the file
    for holder in policy_holder: #Iterates through the file to find the policy number inputted
        if holder[0] == policy_number:
            exists = True
            print("\nPolicyholder Details:")
            print(f"Policy Number: {holder[0]}")
            print(f"First Name: {holder[1]}")
            print(f"Surname: {holder[2]}")
            print(f"Age: {holder[3]}")
            print(f"Gender: {holder[4]}")
            print(f"Area: {holder[5]}")
    if not exists:
        print("That policy number is not found in the file!")

           

def add_new_policy(): #Function called if 2 is chosen in the policyholder menu
    policy_number = input("Enter your new policy number (e.g P1234567) ")
    if policy_number.startswith('P') and policy_number[1:].isdigit() and len(policy_number) == 8: #Input validation for the policy number
            policy_holder = read_policy_holder()
            for holder in policy_holder:
                    if holder[0] == policy_number: #Iteration to check if there is no duplicate policy number
                            print("The policy number you have inputted already correlates to another member!")
                            return
            first_name = input("First Name: ") #No validation for the input of the first name, only for the rest of the inputs as proceeding
            surname = input("Last name: ")
            if not surname:
                    print("Surname cannot be empty")
                    return
            age = input("Age (Young/Old): ").capitalize()

            if age != "Young" and age != "Old":
                print ("Invalid input, please enter exactly Young or Old")
                return
            
            gender = input("Gender (Male/Female): ").capitalize()

            if gender != "Male" and gender != "Female":
                print ("Invalid input, please enter exactly Male or Female")
                return
            
            area = input("Area (North/Central/South): ").capitalize()

            if area != "North" and area != "Central" and area != "South":
                print ("Invalid input, please enter North, Central or South!")
                return
            

            new_policy_holder = [policy_number, first_name, surname, age, gender, area]
            policy_holder.append(new_policy_holder) #appends the new holder to the python list, but not the file

            save_choice = input_string("Do you want to save the new policholder to the file? Yes/No ").lower()
            if save_choice == "yes":
                save_policy_holder(policy_holder) #if the user wishes, the new created policy holder is saved onto the file
                print("New policyholder added successfully.")
            else:
                return
    else:
           print ("Invalid input, please use the example given")
           return
    
def input_integer(prompt):
    while True:
        try:
            return int(input(prompt))
        except ValueError:
            print("Invalid input. Please enter an integer.")

def input_float(prompt):
    while True:
        try:
            return float(input(prompt))
        except ValueError:
            print("Invalid input. Please enter a number.")

def input_string(prompt):
    while True:
        try:
            return str(input(prompt))
        except ValueError:
            print("Invalid input.")



'''if __name__ == "__main__":
    policy_menu()
'''
